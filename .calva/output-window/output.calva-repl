; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "shadow-cljs"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: npx shadow-cljs -d cider/cider-nrepl:0.28.5 watch :app
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉>  ; Use `alt+enter` to evaluate
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉>  ; Use `alt+enter` to evaluate
; nREPL Connection was closed
; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this:
; "calva.autoSelectReplConnectProjectType": "shadow-cljs"
;   - See https://calva.io/connect/#auto-select-project-type
; 
; Starting Jack-in Terminal: npx shadow-cljs -d cider/cider-nrepl:0.28.5 watch :app
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉> 
(defn string->integer [s & {:keys [base] :or {base 10}}]
  (Integer/parseInt s base))
nil
; ------ WARNING - :undeclared-ns ------------------------------------------------
;  Resource: <eval>:2:4
;  No such namespace: Integer, could not locate Integer.cljs, Integer.cljc, or JavaScript source providing "Integer"
; --------------------------------------------------------------------------------
; 
; 
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:2:4
;  Use of undeclared Var Integer/parseInt
; --------------------------------------------------------------------------------
; 
clj꞉re-frame-template.components.filter꞉> 
(string->integer "11")
:repl/exception!
; 
; Execution error (TypeError) at (<cljs repl>:1).
; Cannot read properties of undefined (reading 'call')
clj꞉re-frame-template.components.filter꞉> 
(defn string->integer [s & {:keys [base] :or {base 10}}]
  (Integer/parseInt s base))
(string->integer "11")
:repl/exception!
; 
; Execution error (TypeError) at (<cljs repl>:1).
; Cannot read properties of undefined (reading 'call')
clj꞉re-frame-template.components.filter꞉> 
